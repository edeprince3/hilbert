# PYTHONPATH must include directory above plugin directory.
#     Define either externally or here, then import plugin.
sys.path.insert(0, '../../..')
import hilbert

molecule mol1 {
         O            0.000000000000     0.000000000000    -0.068516219320    
         H            0.000000000000    -0.790689573744     0.543701060715    
         H            0.000000000000     0.790689573744     0.543701060715    
no_reorient
nocom
symmetry c1
}
molecule mol2 {
         O             0.000000000000    -0.068516219320    0.000000000000    
         H            -0.790689573744     0.543701060715    0.000000000000    
         H             0.790689573744     0.543701060715    0.000000000000    
no_reorient
nocom
symmetry c1
}
molecule mol3 {
         O         -0.068516219320      0.000000000000     0.000000000000     
         H          0.543701060715      0.000000000000    -0.790689573744     
         H          0.543701060715      0.000000000000     0.790689573744     
no_reorient
nocom
symmetry c1
}

set {
  basis def2-tzvppd
  scf_type df 
  e_convergence 1e-10
  d_convergence 1e-10 
} 

# frequency: 2.0 eV
w = 0.07349864501573

# lambda: 0.05
# coupling g = 0.05 / sqrt(2*w)
g = 0.05 / np.sqrt(2.0 * w)

set {
  maxiter 500
  cavity_frequency         [0.0, 0.0, $w]
  cavity_coupling_strength [0.0, 0.0, $g]
  qed_dft_functional tpssh
}

ref_dft = -76.453452994149

set reference uks
activate(mol1)
set basis def2-tzvppd
energy('qed-dft')

compare_values(ref_dft, variable("SCF TOTAL ENERGY"), 8, "QED-DFT total energy (xyz)") # TEST

set reference uks
activate(mol2)
set basis def2-tzvppd
set hilbert {
    rotate_polarization_axis "ZXY"
}
energy('qed-dft')

compare_values(ref_dft, variable("SCF TOTAL ENERGY"), 8, "QED-DFT total energy (zxy)") # TEST

set reference uks
activate(mol3)
set basis def2-tzvppd
set hilbert {
    rotate_polarization_axis "YZX"
}
energy('qed-dft')

compare_values(ref_dft, variable("SCF TOTAL ENERGY"), 8, "QED-DFT total energy (yzx)") # TEST
